version: '3.3'

services:
  kgt-registry:
    image: 'kgt/kgt-registry:latest'
    restart: always
    build:
      context: ./kgt-registry/
    container_name: kgt-registry
    ports:
      - "8762:8762"

  kgt-authorization:
    image: 'kgt/kgt-authorization:latest'
    restart: always
    build:
      context: ./kgt-authorization/
    container_name: kgt-authorization
    depends_on:
      - kgt-registry
    ports:
      - "8081:8081"

  kgt-gateway:
    image: 'kgt/kgt-gateway:latest'
    restart: always
    build:
      context: ./kgt-gateway/
    container_name: kgt-gateway
    depends_on:
      - kgt-registry
      - kgt-authorization
    ports:
      - "8761:8761"

  kgt-feedback:
    image: 'kgt/kgt-feedback:latest'
    build:
      context: ./kgt-feedback/
    container_name: kgt-feedback
    depends_on:
      - kgt-gateway
      - feedback-postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://feedback-postgres:5432/kgt_feedback
      - FEEDBACK_DATASOURCE_DRIVER=org.postgresql.Driver
      - SPRING_DATASOURCE_USERNAME=kgt
      - SPRING_DATASOURCE_PASSWORD=kgt
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - "8091:8091"

  feedback-postgres:
    image: 'postgres:11.4-alpine'
    container_name: feedback-postgres
    restart: always
    environment:
      - POSTGRES_USER=kgt
      - POSTGRES_PASSWORD=kgt
    ports:
#      - Might not even be needed
      - "8400:5432"
    volumes:
      - ./deploy/sql/create_database.sql:/docker-entrypoint-initdb.d/create_database.sql
      - postgres_data:/var/lib/postgresql/data

  kgt-react:
    image: 'kgt/kgt-react:latest'
    container_name: kgt-react
    build:
      context: ./kgt-react/
      target: production
    depends_on:
      - kgt-feedback
      - kgt-gateway
      - kgt-authorization
      - kgt-registry
    environment:
      - PUBLIC_URL=/app/public
    ports:
      - "80:80"


volumes:
  postgres_data:
    driver: local