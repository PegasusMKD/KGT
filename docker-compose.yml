version: '3.3'

services:
  kgt-registry:
    image: '${IP_ADDR}/kgt/kgt-registry:latest'
    restart: always
    container_name: kgt-registry

  authorization-postgres:
    image: 'postgres:11.4-alpine'
    container_name: authorization-postgres
    restart: always
    environment:
      - 'POSTGRES_USER=${AUTHORIZATION_POSTGRES_USERNAME}'
      - 'POSTGRES_PASSWORD=${AUTHORIZATION_POSTGRES_PASSWORD}'
    volumes:
      - ./deploy/sql/create_authorization_database.sql:/docker-entrypoint-initdb.d/create_authorization_database.sql
      - authorization_data:/var/lib/postgresql/data

  kgt-authorization:
    image: '${IP_ADDR}/kgt/kgt-authorization:latest'
    restart: always
    container_name: kgt-authorization
    depends_on:
      - kgt-registry
      - authorization-postgres
    environment:
      - 'SPRING_DATASOURCE_URL=${AUTHORIZATION_DATASOURCE_URL}'
      - 'AUTHORIZATION_DATASOURCE_DRIVER=${AUTHORIZATION_DATASOURCE_DRIVER}'
      - 'SPRING_DATASOURCE_USERNAME=${AUTHORIZATION_DATASOURCE_USERNAME}'
      - 'SPRING_DATASOURCE_PASSWORD=${AUTHORIZATION_DATASOURCE_PASSWORD}'
      - 'SPRING_JPA_HIBERNATE_DDL_AUTO=${AUTHORIZATION_JPA_HIBERNATE_DDL_AUTO}'

  kgt-gateway:
    image: '${IP_ADDR}/kgt/kgt-gateway:latest'
    restart: always
    container_name: kgt-gateway
    depends_on:
      - kgt-registry
      - kgt-authorization
    ports:
      - "8761:8761"

  kgt-ml-prediction:
    image: '${IP_ADDR}/kgt/kgt-ml-prediction:latest'
    restart: always
    command: gunicorn --bind 0.0.0.0:5001 manage:app
    container_name: kgt-ml-prediction
    environment:
      - 'FLASK_APP=${FLASK_APP}'
      - 'FLASK_ENV=${FLASK_ENV}'
      - 'APP_FOLDER=${APP_FOLDER}'


  kgt-ontology:
    image: '${IP_ADDR}/kgt/kgt-ontology:latest'
    container_name: kgt-ontology
    depends_on:
      - kgt-gateway
      - ontology-mysql
    environment:
      - 'SPRING_DATASOURCE_URL=${ONTOLOGY_MYSQL_DATASOURCE_URL}'
      - 'ONTOLOGY_MYSQL_DATASOURCE_DRIVER=${ONTOLOGY_MYSQL_DATASOURCE_DRIVER}'
      - 'SPRING_DATASOURCE_USERNAME=${ONTOLOGY_MYSQL_DATASOURCE_USERNAME}'
      - 'SPRING_DATASOURCE_PASSWORD=${ONTOLOGY_MYSQL_DATASOURCE_PASSWORD}'
      - 'SPRING_JPA_HIBERNATE_DDL_AUTO=${ONTOLOGY_MYSQL_JPA_HIBERNATE_DDL_AUTO}'

  ontology-mysql:
    image: mysql:8
    container_name: ontology-mysql
    volumes:
      - ontology_data:/var/lib/mysql
    environment:
      - 'MYSQL_ROOT_PASSWORD=${ONTOLOGY_MYSQL_ROOT_PASSWORD}'
      - 'MYSQL_PASSWORD=${ONTOLOGY_MYSQL_USER_PASSWORD}'
      - 'MYSQL_USER=${ONTOLOGY_MYSQL_USER_USERNAME}'
      - 'MYSQL_DATABASE=${ONTOLOGY_MYSQL_DATABASE}'

  kgt-feedback:
    image: '${IP_ADDR}/kgt/kgt-feedback:latest'
    container_name: kgt-feedback
    depends_on:
      - kgt-gateway
      - feedback-postgres
    environment:
      - 'SPRING_DATASOURCE_URL=${FEEDBACK_DATASOURCE_URL}'
      - 'FEEDBACK_DATASOURCE_DRIVER=${FEEDBACK_DATASOURCE_DRIVER}'
      - 'SPRING_DATASOURCE_USERNAME=${FEEDBACK_DATASOURCE_USERNAME}'
      - 'SPRING_DATASOURCE_PASSWORD=${FEEDBACK_DATASOURCE_PASSWORD}'
      - 'SPRING_JPA_HIBERNATE_DDL_AUTO=${FEEDBACK_JPA_HIBERNATE_DDL_AUTO}'

  feedback-postgres:
    image: 'postgres:11.4-alpine'
    container_name: feedback-postgres
    restart: always
    environment:
      - 'POSTGRES_USER=${FEEDBACK_POSTGRES_USERNAME}'
      - 'POSTGRES_PASSWORD=${FEEDBACK_POSTGRES_PASSWORD}'
    volumes:
      - ./deploy/sql/create_feedback_database.sql:/docker-entrypoint-initdb.d/create_feedback_database.sql
      - feedback_data:/var/lib/postgresql/data

  kgt-react:
    image: '${IP_ADDR}/kgt/kgt-react:latest'
    container_name: kgt-react
    depends_on:
      - kgt-feedback
      - kgt-gateway
      - kgt-authorization
      - kgt-registry
    environment:
      - 'PUBLIC_URL=${PUBLIC_URL}'
    ports:
      - "80:80"


volumes:
  feedback_data:
    driver: local
  authorization_data:
    driver: local
  ontology_data:
    driver: local